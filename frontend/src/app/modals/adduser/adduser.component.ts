import { UsersService } from '../../services/users/users.service';
import { Component, EventEmitter, Output, ViewEncapsulation } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { UserEntry } from '../../components/userregistry/userregistry.component';
import { MatDialog } from '@angular/material/dialog';

export interface AddUserEntry {
  id?: number; // id generated by backend
  firstName: string; 
  lastName: string;
  email: string; 
  phone: string;
  password: string;
  isAdmin: boolean; 
}

@Component({
  selector: 'app-adduser',
  templateUrl: './adduser.component.html',
  styleUrls: ['./adduser.component.css']
})
export class AdduserComponent {

  // User creation form fields
  firstName: string = '';
  lastName: string = '';
  email: string = '';
  phone: string = '';
  password: string = '';
  confirmPassword: string = '';
  isAdmin: boolean = false;

  @Output() userCreated = new EventEmitter<any>();
  addUserForm: FormGroup;
  
  constructor(private fb: FormBuilder,
    private usersService: UsersService,
    public dialog: MatDialog) {
    this.addUserForm = this.fb.group({});
  }

  ngOnInit() {
    this.addUserForm = this.fb.group({
      firstName: ['', Validators.required],
      lastName: ['', Validators.required], 
      email: ['', [Validators.required, Validators.email]],
      phone: ['', Validators.required],
      password: ['', [Validators.required, Validators.minLength(8)]],
      confirmPassword: ['', Validators.required],
      isAdmin: [false, Validators.required]
    });
  }

  onSubmit() {
    if (this.addUserForm.valid) {
      const formValues = this.addUserForm.value;
  
      const newUser: UserEntry = { 
        name: formValues.firstName,
        email: formValues.email,
        status: 'JOINED', // hardedcoded for testing
        active: 'YES', // hardedcoded for testing
        admin: formValues.isAdmin ? 'YES' : 'NO'
      };

      this.usersService.createUserTest(newUser)
        .subscribe((user: UserEntry) => {
          this.userCreated.emit(user);
          console.log('User created after clicking submit: ', user);
          this.dialog.closeAll();
        });
    }
  }

}
